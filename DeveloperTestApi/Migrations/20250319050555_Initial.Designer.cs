// <auto-generated />
using DeveloperTestApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeveloperTestApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250319050555_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperTestApi.Model.Account", b =>
                {
                    b.Property<string>("ACC_number")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ACC_Number");

                    b.Property<string>("ACC_Parent")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ACC_Parent");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(20,9")
                        .HasColumnName("Balance");

                    b.HasKey("ACC_number");

                    b.HasIndex("ACC_Parent");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("DeveloperTestApi.Model.Account", b =>
                {
                    b.HasOne("DeveloperTestApi.Model.Account", "ParentAccount")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ACC_Parent")
                        .HasConstraintName("FK_Account_Account");

                    b.Navigation("ParentAccount");
                });

            modelBuilder.Entity("DeveloperTestApi.Model.Account", b =>
                {
                    b.Navigation("ChildAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
